/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TokenMarket, TokenMarketInterface } from "../TokenMarket";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenPairAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "getLatestPrice",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161038f38038061038f8339818101604052810190610032919061008d565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506100ff565b600081519050610087816100e8565b92915050565b60006020828403121561009f57600080fd5b60006100ad84828501610078565b91505092915050565b60006100c1826100c8565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6100f1816100b6565b81146100fc57600080fd5b50565b6102818061010e6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80638e15f47314610030575b600080fd5b61003861004e565b60405161004591906101c1565b60405180910390f35b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156100b757600080fd5b505afa1580156100cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100ef919061013b565b5050509150508091505090565b60008151905061010b81610206565b92915050565b6000815190506101208161021d565b92915050565b60008151905061013581610234565b92915050565b600080600080600060a0868803121561015357600080fd5b600061016188828901610126565b9550506020610172888289016100fc565b945050604061018388828901610111565b935050606061019488828901610111565b92505060806101a588828901610126565b9150509295509295909350565b6101bb816101dc565b82525050565b60006020820190506101d660008301846101b2565b92915050565b6000819050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b61020f816101dc565b811461021a57600080fd5b50565b610226816101e6565b811461023157600080fd5b50565b61023d816101f0565b811461024857600080fd5b5056fea26469706673582212209e6dabcaea408a90026e368b68842f91f14373f470133ade2fa7b6eab3852d5d64736f6c63430008040033";

export class TokenMarket__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    tokenPairAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TokenMarket> {
    return super.deploy(
      tokenPairAddress,
      overrides || {}
    ) as Promise<TokenMarket>;
  }
  getDeployTransaction(
    tokenPairAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(tokenPairAddress, overrides || {});
  }
  attach(address: string): TokenMarket {
    return super.attach(address) as TokenMarket;
  }
  connect(signer: Signer): TokenMarket__factory {
    return super.connect(signer) as TokenMarket__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenMarketInterface {
    return new utils.Interface(_abi) as TokenMarketInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenMarket {
    return new Contract(address, _abi, signerOrProvider) as TokenMarket;
  }
}
